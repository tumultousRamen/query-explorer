version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=config.settings.local
      - DATABASE_URL=postgres://postgres:postgres@db:5432/query_explorer
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    networks:
      - query_explorer_network

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=query_explorer
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    networks:
      - query_explorer_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - query_explorer_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A config worker -l INFO
    volumes:
      - .:/app
    environment:
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=config.settings.local
      - DATABASE_URL=postgres://postgres:postgres@db:5432/query_explorer
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - web
      - db
      - redis
    networks:
      - query_explorer_network

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A config beat -l INFO
    volumes:
      - .:/app
    environment:
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=config.settings.local
      - DATABASE_URL=postgres://postgres:postgres@db:5432/query_explorer
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - web
      - db
      - redis
    networks:
      - query_explorer_network

volumes:
  postgres_data:
  redis_data:

networks:
  query_explorer_network:
    driver: bridge